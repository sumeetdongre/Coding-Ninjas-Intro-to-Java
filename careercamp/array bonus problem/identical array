Identical Arrays
Send Feedback
You are given two input arrays of same size n, which contains the same elements but placed in a different order. Elements present in the first or second array should be distinct. You have to make the second array same as the first array using a minimum number of swaps.
Note: We can only make changes in the second array.
Input format:
The first line of input contains the size of both the input arrays(n). The following line contains n space-separated integers elements of the first array and the last line contains n space-separated elements of the second array.
Output format:
Minimum number of swaps required to make the two arrays identical.
Constraints:
Value of n should lie in the range [0,1000]
Sample Input :
5
5 1 6 9 7
1 7 6 9 5
Sample Output :
2
import java.util.Scanner;
import java.util.*;
public class Main {


    public static void main(String[] args) {
        /* Your class should be named Main.
 			* Read input as specified in the question.
 			* Print output as specified in the question.
		*/

        // Write your code here
        Scanner s=new Scanner(System.in);
        int n=s.nextInt();
        int arr1[]=new int[n];
        int arr2[]=new int[n];
        for(int i=0;i<n;i++){
            arr1[i]=s.nextInt();
          //  arr2[i]=s.nextInt();
        }
         for(int i=0;i<n;i++){
            arr2[i]=s.nextInt();
        }
        int count=0;
        for(int i=0;i<arr1.length;i++)
        {
            if(arr1[i]!=arr2[i])
            {
                for(int j=0;j<arr2.length;j++)
                {
                    if(arr2[j]==arr1[i])
                    {
                        int temp=arr2[i];
                        arr2[i]=arr2[j];
                        arr2[j]=temp;
                    }
                }
                count++;
            }
        }
        System.out.print(count);
    }

}
